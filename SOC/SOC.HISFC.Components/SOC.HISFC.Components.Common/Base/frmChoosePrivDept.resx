<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAQ
        DgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABGAEAARgBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABYAMAARgDAAEBAQABCAYAAQkYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wwAAacBBwHsAc8MAAGn
        ArYExASnRAABpwHsAe0C9wGhCwABbgGMAbwBtQGNAYwBrgGMAa4BjQGMAaIBhgKoAs8+AAGnAewBvAEH
        AewB8wsAAT8BrwH/AfEBkgHtAfcBvALzAfABtQGNAa4DjAHEOgABpwGhAgABrgHsAbwB7wHsAacKAAE/
        Aa8B/wG8AewB7wLsAQcC8wT0Af8BvAHEOAABzwGuAewBtQGhAQABpwHsAe8BvAHsAc8EAAGNAYwEAAE/
        Aa8B/wH0Au8B7QHrAfcGvAH/AbwBxDcAAacB7AHvAfEB7QGhAQABoQHsAfcBvAHtAa4BAAGhAacBbwEl
        AUwBqAMAAT8BrwH/AQcB7wFtAe8BvAHtAbwG/wG8AcQ3AAGnAewBBwH/Ae8B9wGnAbUB7AK8AesBtQGn
        AZMBTAErAVMBTAGuAwABPwGvAv8B9AG8AfcB7wFnAewBtQS8Af8BvAHEOAABpwHsAfAB9APvAbwB8AEH
        AesBkwFMASsCUwFZAVMBdAMAAT8BrwH/A/AB9wGuAa8BjAH3AbwB9ALzAf8BvAHENgABoQIaAfMB7AHz
        Af8B9AHzAfIB8QHvAUUBKwJTAVkBegGgAZoBTAMAAT8BrwL/AfQB8wH0A7UBZgHsAbUCvAH/AbwBxDQA
        AacBhgF0ASsBTAHPAbUB9wEHAfAB8QHzAfIB8AHrAVMBWQN6AXUBTAFuAwABPwGvAf8B8AHxAfIB8wHw
        Aa4BCQGvAW0B9wG8AfAB/wG8AcQzAAG1AW4BTAFSAisBmgGhAacBhgEcAewB9AHzAfEB7wFzAXoBoAF1
        AUwBkwGnAcQDAAE+Aa8B/wHyAvEC8AG1Aa4BtgGuAW0B9wG8Af8BvAHEMwABTAFSAXoCUwIrAbUBoQGT
        ASUBSwEHAfMB8gHxAe0BdAElAUwBpwMAA6EBHgGMAewB7QLvArwB8wG1Aa4BCQGGAWcBkgH/AbwBxDMA
        AVIBegGgAXoBUwFNASsBbwFMASsBUwFZAesC8wHyAe8BbgGvBQABHwklAUUB7wG8Aa4BtQEJAYwBrgH/
        AbwBxDMAAacBUgF6AZoBWQFTASsBJQFMAVkBegGaAXMB7wH0AfMB8AHtAdYFAAEfBjgDMgFFAQcB9AG8
        Aa4CtQHsAfcBvAHENAABkwFTAaABegFTAU0BJQFMAqABegFMAewB8gH0AfIC7wOhAgABHwH7BjgCMgFF
        AfcBvAHwAbUBZgHxAfcBZwGuAcQ0AAGnAVIBegGaAXoBUwErASUBdQFSAUwBggGuAQcB9AHzAfEE7AGn
        AQABHwP7BTgBMgFFAQcB8gHxAfAB7wHsAbUBhgFmAYYBzzMAAacBbgFSAaABegJTASsBJQGNAacBAAGn
        AZIB/wH0AfMB8gHxAbwB7AHPAQABHwT7BTgBRQH3BPABrgGvAbUCZgHxNAABtQErAXoBoAF6AVMBTQEl
        AbUCAAG8Ae8B/wEHAesB7AGSAfABBwHsAacKHwFFAfAB8wHxAfAB8QHwAa4CtQFmAW0BCTQAAY0BUgF6
        AZoBWQFTASsBbgHEAc8BkgHyAf8B7QK1Ae8BBwHwAZIBzwMAAT8Brwz/AfEBrgG1Aa4BZwG1Aac0AAF0
        AXoBoAF6AVMBTQFMAYYBBwH3Af8B8AGuAacBAAHPAZIB8AHtAfcDAAE/Aa8B8gEHAvQB8AL0Ad0B/wH0
        AfIC/wHwAY0BtQGMAa4BpzQAAYYBUgF6AZoBegFTASsBdAHzAe0C9AHtAacBAAGnAe0BbQH3AacDAAFF
        Aa8B7wFLAZkBvAFEAZMB7wFEAbwB7wFuAfEC7wG1Aa4BtQGuAac0AAGnAW8BWQGgAXoBUwJMAc8B7wG8
        Af8B7wHPAgABzwG1BQAB6QGMAbUBbgFSAfcBjQFSAfcBcwF0Ae8BSwF5AfcBUgEcAe0BtQEHAac1AAG1
        AUwBUwJSAY0BpwLPAZIB8AHsAe8BoQgAAW8BbgJEAUsBRAFnAUsBbgFoAUwBbgFnAUwBjQJuAacCzwGn
        NgABkwFMARoBoQQAAYYB7QHwAc8JAAH/AfYBeQFSApkBUgF0AlIBdANSAUsBTAHsNAABQgFNAT4HAAE+
        AwABKAMAAWADAAEYAwABAQEAAQEFAAEgAQEWAAP/AQAB/wHhAf8B4AEDAf8GAAH/AcAB/wHgAQABDwYA
        Af8BwAH/AeABAAEHBgAB/gFgAX8B4AEAAQcGAAH4ASABeQHgAQABBwYAAfABIAFAAeABAAEHBgAB8AIA
        AeABAAEHBgAB+AIAAeABAAEHBgAB4AIAAeABAAEHBgABgAIAAeABAAEHCQAB4AEAAQcIAAEHAgABBwgA
        AR8CAAEHCAABHwIAAQcGAAGAAQABAwIAAQcGAAGAAQABAQIAAQMGAAGAAQgBAQIAAQMGAAHAARgDAAEB
        BgAB4AIAAeAIAAHwAQABIAHgCAAB8AEAASAB4AgAAfABAAEzAeAIAAH4AQABHwHgCAAB/AE8AT8B4AEA
        AQ8GAAs=
</value>
  </data>
</root>