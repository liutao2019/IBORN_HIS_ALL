<ReportQueryInfo Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.Setting.ReportQueryInfo,SOC.HISFC.OutpatientFee.Components"><List><List Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.Setting.QueryControl,SOC.HISFC.OutpatientFee.Components"><Index>0</Index><Name>dtBeginTime</Name><Text>开始时间：</Text><IsAddText>true</IsAddText><ControlType Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.ControlType.DateTimeType,SOC.HISFC.OutpatientFee.Components"><AddDays>-1</AddDays><AddMonths>0</AddMonths><CustomFormat>yyyy-MM-dd</CustomFormat><DefaultDataSource></DefaultDataSource><Format>Custom</Format><IsLike>false</IsLike><LikeStr>%{0}%</LikeStr><Size Type="System.Drawing.Size,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><Width>120</Width><Height>20</Height></Size><Location Type="System.Drawing.Point,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><X>10</X><Y>2</Y></Location><QueryDataSource>Dictionary</QueryDataSource><DataSourceTypeName></DataSourceTypeName><Enabled>true</Enabled></ControlType></List><List Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.Setting.QueryControl,SOC.HISFC.OutpatientFee.Components"><Index>1</Index><Name>dtEndTime</Name><Text>结束时间：</Text><IsAddText>true</IsAddText><ControlType Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.ControlType.DateTimeType,SOC.HISFC.OutpatientFee.Components"><AddDays>0</AddDays><AddMonths>0</AddMonths><CustomFormat>yyyy-MM-dd</CustomFormat><DefaultDataSource></DefaultDataSource><Format>Custom</Format><IsLike>false</IsLike><LikeStr>%{0}%</LikeStr><Size Type="System.Drawing.Size,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><Width>120</Width><Height>20</Height></Size><Location Type="System.Drawing.Point,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><X>220</X><Y>2</Y></Location><QueryDataSource>Dictionary</QueryDataSource><DataSourceTypeName></DataSourceTypeName><Enabled>true</Enabled></ControlType></List><List Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.Setting.QueryControl,SOC.HISFC.OutpatientFee.Components"><Index>2</Index><Name>cmbFeeOper</Name><Text>收 费 员：</Text><IsAddText>true</IsAddText><ControlType Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.ControlType.ComboBoxType,SOC.HISFC.OutpatientFee.Components"><IsAddAll>true</IsAddAll><AllValue Type="FS.FrameWork.Models.NeuObject,FrameWork"><ID>ALL</ID><Name>全部</Name><Memo></Memo></AllValue><DataSource /><DefaultDataSource /><IsLike>false</IsLike><LikeStr>%{0}%</LikeStr><Size Type="System.Drawing.Size,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><Width>120</Width><Height>20</Height></Size><Location Type="System.Drawing.Point,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><X>430</X><Y>2</Y></Location><QueryDataSource>Sql</QueryDataSource><DataSourceTypeName>select empl_code id,empl_name name,'' oth,spell_code,wb_code,'' memo from com_employee where empl_type = 'F'</DataSourceTypeName><Enabled>true</Enabled></ControlType></List><List Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.Setting.QueryControl,SOC.HISFC.OutpatientFee.Components"><Index>3</Index><Name>name</Name><Text>姓名：</Text><IsAddText>true</IsAddText><ControlType Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.ControlType.TextBoxType,SOC.HISFC.OutpatientFee.Components"><IsPadLeft>false</IsPadLeft><Length>10</Length><PadLeftName>0</PadLeftName><DefaultDataSource></DefaultDataSource><IsEnterFilter>true</IsEnterFilter><IsLike>false</IsLike><LikeStr>%{0}%</LikeStr><Size Type="System.Drawing.Size,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><Width>120</Width><Height>20</Height></Size><Location Type="System.Drawing.Point,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><X>650</X><Y>2</Y></Location><QueryDataSource>Dictionary</QueryDataSource><DataSourceTypeName></DataSourceTypeName><Enabled>true</Enabled></ControlType></List></List><QueryDataSource><QueryDataSource Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.Setting.QueryDataSource,SOC.HISFC.OutpatientFee.Components"><Name>dtBalanceData</Name><Sql>select decode( grouping_id(tt.zyks,tt.name,tt.invoice_no,tt.sfy,tt.operdate) ,0,tt.invoice_no,7,'[个人小结]'||tt.name,15,'[科室小结]'||tt.zyks,31,'[全院总计]','[未知行]') invoice_no,
          decode( grouping_id(tt.zyks,tt.name,tt.invoice_no,tt.sfy,tt.operdate) ,0,tt.zyks,'-') zyks,
          decode( grouping_id(tt.zyks,tt.name,tt.invoice_no,tt.sfy,tt.operdate) ,0,tt.name,'-') name,
          sum(hj) hj,
          sum(xyf) xyf,
          sum(zyf) zyf,
          sum(cwf) cwf,
          sum(zcf) zcf,
          sum(jcf) jcf,
          sum(jyf) jyf,
          sum(zlf) zlf,
          sum(ssf) ssf,
          sum(mzf) mzf,
          sum(hlf) hlf,
          sum(clf) clf,
          sum(qtf) qtf,
          sum(ca) ca,
          sum(ch) ch,
          sum(ci) ci,
          sum(po) po,
          sum(pos) pos,
          sum(wp) wp,
          sum(zb) zb,
          sum(ye) ye,
          sum(ys) ys,
          sum(pr) pr,
          sum(pyzz) pyzz,
          sum(co) co,
          sum(tco) tco,
          decode( grouping_id(tt.zyks,tt.name,tt.invoice_no,tt.sfy,tt.operdate) ,0,tt.sfy,'-') sfy,
          decode( grouping_id(tt.zyks,tt.name,tt.invoice_no,tt.sfy,tt.operdate) ,0,tt.operdate,null)  operdate
 from 
(
select (case when t.waste_flag = '1' and t.trans_type = '1' then t.invoice_no
               when t.waste_flag = '0' and t.trans_type = '1' then '[退费]'||t.invoice_no
               when t.waste_flag = '0' and t.trans_type = '2' then '[退费]'||t.invoice_no
               else '[未知]'||t.invoice_no  end) invoice_no,
       (select a.dept_name from com_department a where a.dept_code = (select b.dept_code from fin_ipr_inmaininfo b where b.inpatient_no = t.inpatient_no)) zyks,
       t.name,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type） hj,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '01') xyf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '02') zyf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '03') cwf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '04') zcf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '05') jcf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '06') jyf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '07') zlf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '08') ssf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '09') mzf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '10') hlf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '11') clf,
       (select nvl(sum(nvl(a.pub_cost,0)+ nvl(a.own_cost,0) + nvl(a.pay_cost , 0) - nvl(a.donate_cost,0) - nvl(a.eco_cost,0) ),0)  from fin_ipb_balancelist a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.stat_code = '12') qtf,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'CA') ca,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'CH') ch,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'CI') ci,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'PO') po,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'UP') pos,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'WP') WP,       
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'ZB') zb,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'YE') ye,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'YS') ys,
       --(select nvl(sum(a.cost),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'DC') dc,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'PR') pr,
       --(select nvl(sum(a.cost),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'PY') py,
       --(select nvl(sum(a.cost),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'PD') pd,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'PYZZ') pyzz,
       --(select nvl(sum(a.cost),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'RC') rc,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'CO') co,
       (select nvl(sum(case when a.trans_kind=1 and a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost when a.trans_kind=1 and  a.reutrnorsupply_flag=2 and a.trans_type=1 then -a.cost else a.cost end ),0) from fin_ipb_balancepay a where a.invoice_no = t.invoice_no and a.trans_type = t.trans_type and a.pay_way = 'TCO') tco,
       (select a.empl_name from com_employee a where a.empl_code = t.balance_opercode) sfy,
       t.balance_date operdate
  from fin_ipb_balancehead t
 where t.balance_date between to_date('&amp;dtBeginTime','yyyy-mm-dd') and to_date('&amp;dtEndTime','yyyy-mm-dd')+1
   and (t.balance_opercode = '&amp;cmbFeeOper' or '&amp;cmbFeeOper' = 'ALL')
   and (t.name like '%&amp;name%' or '&amp;name' is null) order by  t.invoice_no,t.trans_type) tt
  group by rollup(tt.zyks,tt.name,(tt.invoice_no,tt.sfy,tt.operdate))
  </Sql><AddMapRow>false</AddMapRow><AddMapColumn>true</AddMapColumn><AddMapData>false</AddMapData><AddMapSourceData>false</AddMapSourceData><IsCross>false</IsCross><SqlType>MainReportUsing</SqlType><CrossRows></CrossRows><CrossColumns></CrossColumns><CrossValues></CrossValues><CrossCombinColumns></CrossCombinColumns><SumColumns></SumColumns><CrossGroupColumns></CrossGroupColumns><IsSumRow>true</IsSumRow><SumRows></SumRows><RowGroup /></QueryDataSource></QueryDataSource><QueryFilePath>Report\门诊财务报表\爱博恩\住院患者实收统计设置.xml</QueryFilePath><PrintInfo Type="FS.SOC.HISFC.OutpatientFee.Components.Report.Common.Setting.PrintInfo,SOC.HISFC.OutpatientFee.Components"><PaperSize Type="System.Drawing.Printing.PaperSize,System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"><Height>1169</Height><PaperName>A4</PaperName><RawKind>0</RawKind><Width>850</Width></PaperSize><SelectPage>false</SelectPage></PrintInfo></ReportQueryInfo>