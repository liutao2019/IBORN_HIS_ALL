using System;
using System.Collections.Generic;
using System.Text;

namespace FS.HISFC.BizProcess.Integrate
{
    public class Const
    {
        #region 门诊参数设置常量
        
        /// <summary>
        /// 医院编码- 医保上传编码
        /// {1EBEBAA1-4122-47df-8115-47FF9A7BF5AC}
        /// </summary>
        public const string HosCode = "SHCODE";

        #region liuq 2007-8-23 追加
        /// <summary>
        /// 是否按照执行科室分发票
        /// </summary>
        public const string IS_SPLIT_INVOICE_BY_EXEDEPT = "MZ0101";//(1 是 0 否)

        /// <summary>
        /// 是否按照最小费用分发票
        /// </summary>
        public const string IS_SPLIT_INVOICE_BY_FEECODE = "MZ0102";//(1 是 0 否)

        /// <summary>
        /// 自费发票最小费用最多项目
        /// </summary>
        public const string SPLIT_INVOICE_BY_FEECODE_ZF_COUNT = "MZ0103";

        /// <summary>
        /// 医保发票最小费用最多项目
        /// </summary>
        public const string SPLIT_INVOICE_BY_FEECODE_YB_COUNT = "MZ0104";

        /// <summary>
        /// 公费发票最小费用最多项目
        /// </summary>
        public const string SPLIT_INVOICE_BY_FEECODE_GF_COUNT = "MZ0105"; 
        #endregion

        /// <summary>
        /// 是否门诊发票预览
        /// </summary>
        public const string PREVIEWINVOICE = "MZ0001";
        /// <summary>
        /// 门诊发票打印方式
        /// </summary>
        public const string INVOICEPRINT = "MZ0002";
        /// <summary>
        /// 门诊公费算法调用
        /// </summary>
        public const string PUBFEECOMPUTE = "MZ0003";
        /// <summary>
        /// 门诊处方号生成是否优先组合号
        /// </summary>
        public const string DEALCOMBNO = "MZ0004";
        /// <summary>
        /// 门诊单张处方号最多条数
        /// </summary> 
        public const string NOTECOUNTS = "MZ0005";
        /// <summary>
        /// 门诊是否可以分发票
        /// </summary>
        public const string CANSPLIT = "MZ0006";
        /// <summary>
        /// 门诊是否可以分发票最多张数
        /// </summary>
        public const string SPLITCOUNTS = "MZ0007";
        /// <summary>
        /// 前台弹出计算器类型
        /// </summary>
        public const string CALCTYPE = "MZ0008";
        /// <summary>
        /// 分币处理规则
        /// </summary>
        public const string CENTRULE = "MZ0009";
        /// <summary>
        /// 默认记价单位
        /// </summary>
        public const string PRICEUNIT = "MZ0010";
        /// <summary>
        /// 医保自费部分是否可以支付医保卡
        /// </summary>
        public const string CANUSEMCARND = "MZ0011";
        /// <summary>
        /// 是否可以修改划价保存信息
        /// </summary>
        public const string MODIFY_CHARGE_INFO = "MZ0012";
        /// <summary>
        /// 是否可以更改挂号信息.
        /// </summary>
        public const string CAN_MODIFY_REG_INFO = "MZ0013";
        /// <summary>
        /// 门诊收费挂号有效天数
        /// </summary>
        public const string VALID_REG_DAYS = "MZ0014";

        /// <summary>
        /// 门诊退费有效天数
        /// </summary>
        public const string VALID_QUIT_DAYS = "MZ0015";
        /// <summary>
        /// 是否判断库存
        /// </summary>
        public const string JUDGE_STORE = "MZ0016";
        /// <summary>
        /// 价格提示线
        /// </summary>
        public const string TOP_PRICE_WARNNING = "MZ0017";
        /// <summary>
        /// 预警颜色
        /// </summary>
        public const string TOP_PRICE_WARNNING_COLOR = "MZ0018";
        /// <summary>
        /// 是否可以退其他操作员的费用!
        /// </summary>
        public const string CAN_QUIT_OTHER_OPER_INVOICE = "MZ0019";
        /// <summary>
        /// 是否可以退日结算过的费用!
        /// </summary>
        public const string CAN_QUIT_DAYBALANCED_INVOICE = "MZ0020";
        /// <summary>
        /// 是否可以重打其他操作员发票
        /// </summary>
        public const string CAN_REPRINT_OTHER_OPER_INVOICE = "MZ0021";
        /// <summary>
        /// 是否可以重打其他日结过的发票
        /// </summary>
        public const string CAN_REPRINT_DAYBALANCED_INVOICE = "MZ0022";
        /// <summary>
        /// 是否可以取消其他操作员的发票
        /// </summary>
        public const string CAN_CANCEL_OTHER_OPER_INVOICE = "MZ0023";
        /// <summary>
        /// 是否可以取消其他日结过的发票
        /// </summary>
        public const string CAN_CANCEL_DAYBALANCED_INVOICE = "MZ0024";
        /// <summary>
        /// 毒麻药品提示
        /// </summary>
        public const string SP_DRUG_WARNNING = "MZ0025";
        /// <summary>
        /// 收费时是否判断项目停用
        /// </summary>
        public const string STOP_ITEM_WARNNING = "MZ0026";
        /// <summary>
        /// 未挂号患者收费补位规则
        /// </summary>
        public const string NO_REG_CARD_RULES = "MZ0027";
        /// <summary>
        /// 未挂号患者是否通过医生确定看诊科室.
        /// </summary>
        public const string DOCT_CONFIRM_DEPT = "MZ0028";
        /// <summary>
        /// 科室,医生的代码是否需要全匹配
        /// </summary>
        public const string DOCT_DEPT_INPUT_CORRECT = "MZ0029";
        /// <summary>
        /// 是否可以修改发票日期
        /// </summary>
        public const string CAN_MODIFY_INVOICE_DATE = "MZ0030";
        /// <summary>
        /// 公费是否允许半退
        /// </summary>
        public const string PUB_CAN_HALF_QUIT = "MZ0031";
        /// <summary>
        /// 医保患者是否允许半退
        /// </summary>
        public const string SI_CAN_HALF_QUIT = "MZ0032";
        /// <summary>
        /// 获得发票号方式!
        /// </summary>
        public const string GET_INVOICE_NO_TYPE = "MZ0033";
        /// <summary>
        /// 公费,医保 自动分发票类型
        /// </summary>
        public const string AUTO_INVOICE_TYPE = "MZ0034";
        /// <summary>
        /// 门诊退费 支付方式选择
        /// </summary>
        public const string QUIT_PAY_MODE_SELECT = "MZ0035";
        /// <summary>
        /// 非挂号患者自动收取挂号费编码
        /// </summary>
        public const string AUTO_REG_FEE_ITEM_CODE = "MZ0036";
        /// <summary>
        /// 非挂号患者自动收取挂号费金额
        /// </summary>
        public const string AUTO_REG_FEE_ITEM_COST = "MZ0037";
        /// <summary>
        /// 处理急诊特殊焦点跳转
        /// </summary>
        public const string DEAL_SP_REGLEVEL_FOCUS = "MZ0038";
        /// <summary>
        /// 频次显示方式 0 中文 1 编码
        /// </summary>
        public const string FREQ_DISPLAY_TYPE = "MZ0039";
        /// <summary>
        /// 发票重打默认显示上一张发票
        /// </summary>
        public const string REPRINT_SET_DEFAULT_INVOICE = "MZ0040";
        /// <summary>
        /// 挂号处方号代替门诊卡号 1 是 0 否
        /// </summary>
        public const string REG_RECIPE_NO_RELPACE_CARD_NO = "MZ0041";
        /// <summary>
        /// 挂号处方号有效天数
        /// </summary>
        public const string REG_RECIPE_NO_VALID_DAYS = "MZ0042";
        /// <summary>
        /// 是否应用用户自定义事件
        /// </summary>
        public const string USE_USER_DEFINE_KEYS = "MZ0043";
        /// <summary>
        /// 用户自定义快捷键路径
        /// </summary>
        public const string USER_DIFINE_KEYS_FILE_PATH = @".\profile\clinicShotcut.xml";
        /// <summary>
        /// 门诊公费患者是否自动收取诊金
        /// </summary>
        public const string AUTO_PUB_FEE_DIAG_FEE = "MZ0044";
        /// <summary>
        /// 门诊自动收取诊金编码
        /// </summary>
        public const string AUTO_PUB_FEE_DIAG_FEE_CODE = "MZ0045";
        /// <summary>
        /// 门诊自动收取诊金金额
        /// </summary>
        public const string AUTO_PUB_FEE_DIAG_FEE_COST = "MZ0046";
        /// <summary>
        /// 治疗费统计大类代码
        /// </summary>
        public const string STAT_ZL_CODE = "MZ0047";
        /// <summary>
        /// 检查费统计大类代码
        /// </summary>
        public const string STAT_JC_CODE = "MZ0048";
        /// <summary>
        /// CT费最小费用代码
        /// </summary>
        public const string CTFEE = "MZ0049";
        /// <summary>
        /// MRI最小费用代码
        /// </summary>
        public const string MRIFEE = "MZ0050";
        /// <summary>
        /// 吸氧最小费用代码
        /// </summary>
        public const string XYFEE = "MZ0051";
        /// <summary>
        /// 输血费最小费用代码
        /// </summary>
        public const string SXFEE = "MZ0052";
        /// <summary>
        /// 是否回车直接收费
        /// </summary>
        public const string ENTER_TO_FEE = "MZ0053";
        /// <summary>
        /// 组套项目是否全退 1是 0 不是
        /// </summary>
        public const string GROUP_ITEM_ALLQUIT = "MZ0054";
        /// <summary>
        /// 发票预览显示方式
        /// </summary>
        public const string INVOICE_PREVIEW_TYPE = "MZ0055";
        /// <summary>
        /// 收费时输入数量是否上取整
        /// </summary>
        public const string QTY_TO_CEILING = "MZ0056";
        /// <summary>
        /// 收费时每次用量是否可以为空
        /// </summary>
        public const string DOSE_ONCE_NULL = "MZ0057";
        /// <summary>
        /// 收费时省市限比例优先
        /// </summary>
        public const string PRO_CITY_FIRST = "MZ0058";
        /// <summary>
        /// 收费时自费项目优先
        /// </summary>
        public const string OWNPAY_FIRST = "MZ0059";
        /// <summary>
        /// 收费时可以修改发票打印日期
        /// </summary>
        public const string MODIFY_INVOICE_PRINTDATE = "MZ0060";
        /// <summary>
        /// 医保和HIS金额不等时收费
        /// </summary>
        public const string FEE_WHEN_TOTDIFF = "MZ0061";
        /// <summary>
        /// 医保患者没有挂号时在收费时自动登记 
        /// </summary>
        public const string REG_WHEN_FEE = "MZ0062";
        /// <summary>
        /// 特殊检查提示
        /// </summary>
        public const string MSG_SPECIAL_CHECK = "MZ0063";
        /// <summary>
        ///列表中显示缺药药品
        /// </summary>
        public const string DISPLAY_LACK_PHAMARCY = "MZ0064";
        /// <summary>
        ///范围内金额是否全部自付
        /// </summary>
        public const string TOTCOST_TO_PAYCOST = "MZ0065";
        /// <summary>
        ///是否默认等级编码
        /// </summary>
        public const string CLASS_CODE_PRE = "MZ0066";
        /// <summary>
        ///自费医保计算自费项目
        /// </summary>
        public const string ZFYB_HAVE_ZFITEM = "MZ0067";
        /// <summary>
        ///显示社保卡支付方式
        /// </summary>
        public const string SOCIAL_CARD_DISPLAY = "MZ0068";
        /// <summary>
        ///收费界面显示最小费用
        /// </summary>
        public const string MINFEE_DISPLAY_WHENFEE = "MZ0069";
        /// <summary>
        ///收费界面显示最小费用
        /// </summary>
        public const string FIX_FIRST_CLASSCODE = "MZ0070";
        /// <summary>
        ///收费时只显示应缴现金金额
        /// </summary>
        public const string CASH_ONLY_WHENFEE = "MZ0071";
        /// <summary>
        ///收费时自费合同单位显示医保标记
        /// </summary>
        public const string OWN_DISPLAY_YB = "MZ0072";
        /// <summary>
        ///分处方号忽略类别
        /// </summary>
        public const string DEC_SYS_WHENGETRECIPE = "MZ0073";
        /// <summary>
        ///屏蔽暂存功能
        /// </summary>
        public const string ENABLE_TEMP_SAVE = "MZ0074";
        /// <summary>
        ///启动lis
        /// </summary>
        public const string DATA_TO_LIS = "MZ0075";
        /// <summary>
        ///自费诊金代码
        /// </summary>
        public const string OWN_DIAGFEE_CODE = "MZ0076";
        /// <summary>
        ///急诊挂号级别
        /// </summary>
        public const string EMR_REG_LEVEL = "MZ0077";
        /// <summary>
        ///门诊挂号级别
        /// </summary>
        public const string COM_REG_LEVEL = "MZ0078";
        /// <summary>
        ///急诊公费诊金代码
        /// </summary>
        public const string EMR_PUBDIAG_ITEMCODE = "MZ0079";
        /// <summary>
        ///急诊自费诊金代码
        /// </summary>
        public const string EMR_OWNDIAG_ITEMCODE = "MZ0080";
        /// <summary>
        /// 本院职工默认看诊科室
        /// </summary>
        public const string EMPLOYEE_SEE_DEPT = "MZ0081";
        /// <summary>
        /// 获取项目比例方式
        /// </summary>
        public const string GET_ITEMRATE_TYPE = "MZ0082";

        /// <summary>
        /// 门诊收费 患者基本信息插件
        /// </summary>
        public const string INTERFACE_REGINFO = "MZ0083";

        /// <summary>
        /// 门诊收费 项目录入插件
        /// </summary>
        public const string INTERFACE_ITEM_INPUT = "MZ0084";

        /// <summary>
        /// 门诊收费 左侧信息插件
        /// </summary>
        public const string INTERFACE_LEFT = "MZ0085";

        /// <summary>
        /// 门诊收费 右侧信息插件
        /// </summary>
        public const string INTERFACE_RIGHT = "MZ0087";

        /// <summary>
        /// 门诊收费 收费弹出确认插件
        /// </summary>
        public const string INTERFACE_POP_FEE = "MZ0088";

        /// <summary>
        /// 门诊收费 项目选择插件
        /// </summary>
        public const string INTERFACE_CHOOSE_ITEM = "MZ0099";

        /// <summary>
        /// 门诊暂存后,处方号生成规则优先处理暂存记录
        /// </summary>
        public const string 处方号优先考虑分方记录 = "MZ0100";

        /// <summary>
        /// 门诊收费是否可以输入负数数量,补差价用{0F98A513-A9EA-4110-B35F-E353A390E350}
        /// </summary>
        public const string INPUT_NEGATIVE_QTY = "MZ0201";

        /// <summary>
        /// 协定处方是否拆成明细 {ED51E97B-B752-4c32-BD93-F80209A24879}
        /// </summary>
        public const string Split_NostrumDetail = "MZ0202";

        /// <summary>
        /// 是否按照超出项目次数分收费序列
        /// </summary>
        public const string IS_SPLIT_RECIPE_SEQ_BY_EXCEED = "MZ0203";

        /// <summary>
        /// 通过常数名 返回对应接口类型的String
        /// </summary>
        /// <param name="constName">常数名</param>
        /// <returns>成功 接口名 失败null</returns>
        public static string GetOutpatientPlugInInterfaceNameByConstName(string constName)
        {
            System.Collections.Hashtable hashTable = new System.Collections.Hashtable();

            hashTable.Add(INTERFACE_REGINFO, "FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientInfomation");
            hashTable.Add(INTERFACE_ITEM_INPUT, "FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientItemInputAndDisplay");
            hashTable.Add(INTERFACE_LEFT, "FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientOtherInfomationLeft");
            hashTable.Add(INTERFACE_RIGHT, "FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientOtherInfomationRight");
            hashTable.Add(INTERFACE_POP_FEE, "FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientPopupFee");
            hashTable.Add(INTERFACE_CHOOSE_ITEM, "FS.HISFC.BizProcess.Integrate.FeeInterface.IChooseItemForOutpatient");

            if (hashTable.ContainsKey(constName))
            {
                return hashTable[constName].ToString();
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// 通过接口名 返回对应常数
        /// </summary>
        /// <param name="interfaceName">常数名</param>
        /// <returns>成功 接口名 失败null</returns>
        public static string GetOutpatientPlugInConstNameByInterfaceName(string interfaceName)
        {
            System.Collections.Hashtable hashTable = new System.Collections.Hashtable();

            hashTable.Add("FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientInfomation", INTERFACE_REGINFO);
            hashTable.Add("FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientItemInputAndDisplay", INTERFACE_ITEM_INPUT);
            hashTable.Add("FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientOtherInfomationLeft", INTERFACE_LEFT);
            hashTable.Add("FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientOtherInfomationRight", INTERFACE_RIGHT);
            hashTable.Add("FS.HISFC.BizProcess.Integrate.FeeInterface.IOutpatientPopupFee", INTERFACE_POP_FEE);
            hashTable.Add("FS.HISFC.BizProcess.Integrate.FeeInterface.IChooseItemForOutpatient", INTERFACE_CHOOSE_ITEM);

            if (hashTable.ContainsKey(interfaceName))
            {
                return hashTable[interfaceName].ToString();
            }
            else
            {
                return null;
            }
        }

        #endregion

        /// <summary>
        /// 欠费催交单打印dll反射
        /// </summary>
        public const string RADT_MoneyAlter = "RADT01";
    }

    /// <summary>
    /// 系统控制参数
    /// </summary>
    public class SysConst
    {
        public SysConst()
        {
            hsDescription = new System.Collections.Hashtable();

            this.hsDescription.Add(Use_Judge_VersionNum, "是否需要对系统进行版本校验判断");
            this.hsDescription.Add(Use_Inject_Flow, "是否使用门诊注射管理流程");
            this.hsDescription.Add(Use_Drug_ApartFee, "是否使用药品执行、扣费分开流程(医嘱发送时即进行收费，药房仅处理发药)");
            this.hsDescription.Add(Use_Drug_BackFee, "药品退药的同时是否退费");
            this.hsDescription.Add(Use_Drug_ApplyNurse, "药品申请科室类型 0 科室 1 护理站");
        }

        #region 系统流程参数设置

        /// <summary>
        /// 是否需要对系统进行版本校验判断
        /// </summary>
        public const string Use_Judge_VersionNum = "S00001";

        /// <summary>
        /// 是否使用门诊注射管理流程
        /// </summary>
        public const string Use_Inject_Flow = "S00010";

        /// <summary>
        /// 是否使用药品执行、扣费分开流程(医嘱发送时即进行收费，药房仅处理发药)
        /// </summary>
        public const string Use_Drug_ApartFee = "S00020";

        /// <summary>
        /// 药品退药的同时是否退费
        /// </summary>
        public const string Use_Drug_BackFee = "S00021";

        /// <summary>
        /// 药品申请科室类型 0 科室 1 护理站
        /// </summary>
        public const string Use_Drug_ApplyNurse = "S00022";

        /// <summary>
        /// 母婴的时候,所有孩子的费用都记在妈妈的头上,孩子没有费用发生 1 记在妈妈头上 0 或者没有维护,记在还在头上
        /// </summary>
        public const string Use_Mother_PayAllFee = "S00023";

        /// <summary>
        /// 使用药品负库存管理模式 0 不允许负库存 1 允许存在负库存
        /// </summary>
        public const string Use_Negative_DrugStore = "S00024";

        /// <summary>
        /// 门诊账户流程是否使用终端扣费流程  1终端收费 0门诊收费
        /// </summary>
        public const string Use_Account_Process = "S00031";

        //{A6DB46E9-EDD4-47d3-B2E5-1D8966DBBA43}
        /// <summary>
        /// 发票号切换是否提示
        /// </summary>
        public const string Use_CutOverInvoiceNO_Mess = "S00032";
        #endregion

        private System.Collections.Hashtable hsDescription;

        /// <summary>
        /// 获取参数描述
        /// </summary>
        /// <param name="ctrlCode">参数名称</param>
        /// <returns>成功找到返回参数描述 未找到返回空数据</returns>
        public string GetParamDescription(string ctrlCode)
        {
            if (this.hsDescription.ContainsKey(ctrlCode))
            {
                return this.hsDescription[ctrlCode] as string;
            }
            else
            {
                return "";
            }
        }
    }

    /// <summary>
    /// 药品管理控制参数常数类
    /// </summary>
    /// <说明>
    ///     1 控制参数代码与功能模块对应关系
    ///         P00101~ P00299  住院药房参数
    ///         P00301~ P00499  门诊药房参数
    ///         P00501~ P01001  药品/药库管理参数
    ///     2、作废参数：  2010-03-03
    ///         P00111、P00112、P00117、P00503、P00504
    ///         P01000、P01001、P01009、P01010、P01011
    ///         P01012、P01013、P01014、P01015
    /// </说明>
    public class PharmacyConstant
    {
        #region 药品管理参数设置常量

        /// <summary>
        /// 拆分属性维护时 药品是否可以设置为不可拆分属性
        /// </summary>
        public const string Can_Set_NoSplitAtAll = "P00101";

        /// <summary>
        /// 拆分属性维护时 药品是否可以设置为可拆分不取整
        /// </summary>
        public const string Can_Set_SplitAndNoInteger = "P00102";

        /// <summary>
        ///  拆分属性维护时 药品是否可以设置为可拆分上取整
        /// </summary>
        public const string Can_Set_SplitAndUpperToInteger = "P00103";

        /// <summary>
        ///  拆分属性维护时 药品是否可以设置为不可拆分当日取整
        /// </summary>
        public const string Can_Set_NosplitAndDayToInteger = "P00104";

        /// <summary>
        ///  拆分属性维护时 药品是否可以设置为可拆分按科室取整
        /// </summary>
        public const string Can_Set_SplitAndDeptToInteger = "P00105";

        /// <summary>
        ///  拆分属性维护时 药品是否可以设置为可拆分按病区取整
        /// </summary>
        public const string Can_Set_SplitAndNurceCellToInteger = "P00106";

        /// <summary>
        ///  拆分属性维护时 药品是否可以设置为不可拆分按包装单位取整 启用患者库存 {9D24EE50-57C5-4cae-8B70-8D8C3E7B4BDC}
        /// </summary>
        public const string Can_Set_NoSplitAndPackUnit = "P00107";

        /// <summary>
        /// 住院药房摆药是否需要核准  
        /// </summary>
        public const string InDrug_Need_Approve = "P00109";

        /// <summary>
        /// 住院药房摆药核准时是否进行权限判断 即只有药师/药剂师允许核准操作
        /// </summary>
        public const string InDrug_Need_Priv = "P00110";

        /// <summary>
        /// 按科室添加待摆药信息时 是否自动选中
        /// </summary>
        public const string InDrug_Auto_Check = "P00113";

        /// <summary>
        /// 药房摆药单打印处理 是否显示本单据内患者发药汇总信息
        /// </summary>
        public const string InDrug_Show_PatientTot = "P00114";

        /// <summary>
        /// 药房摆药单打印处理 是否显示本单据的科室汇总发药信息
        /// </summary>
        public const string InDrug_Show_DeptTot = "P00115";

        /// <summary>
        /// 待摆药数据列表显示时 是否按科室优先方式显示
        /// </summary>
        public const string InDrug_Show_DeptFirst = "P00116";     

        /// <summary>
        /// 住院收费是否使用预扣库存方式
        /// </summary>
        public const string InDrug_Pre_Out = "P00200";

        /// <summary>
        /// 门诊发药终端保存后 是否刷新
        /// </summary>
        public const string Terminal_Save_Refresh = "P00301";

        /// <summary>
        /// 门诊发药界面是否显示付数
        /// </summary>
        public const string OutDrug_Show_Days = "P00302";

        /// <summary>
        /// 配药确认后是否打印配药清单
        /// </summary>
        public const string OutDrug_Print_List = "P00303";
       
        /// <summary>
        /// 发药确认后是否打印处方
        /// </summary>
        public const string OutDrug_Print_Recipe = "P00304";

        /// <summary>
        /// 配药检索时工号补足位数 －1 不需补位  原控制参数值 500007
        /// </summary>
        public const string OutDrug_OperCode_Length = "P00305";

        /// <summary>
        /// 配/发药窗口是否进行权限控制 (只有药师可以操作) 原控制参数值 500011
        /// </summary>
        public const string OutDrug_Need_Priv = "P00306";

        /// <summary>
        /// 门诊标签自动打印时  是否对存在作 废记录的处方不打印 原控制参数值500014
        /// </summary>
        public const string OutDrug_Print_BackRecipe = "P00307";

        /// <summary>
        /// 门诊标签打印时 接口数据传输方式 0 分组传输 1 一次性传输
        /// </summary>
        public const string OutDrug_PrintData_SentType = "P00308";

        /// <summary>
        /// 门诊配药时 是否进行库存警戒判断
        /// </summary>
        public const string OutDrug_Warn_Druged = "P00309";

        /// <summary>
        /// 门诊发药时 是否进行库存警戒判断
        /// </summary>
        public const string OutDrug_Warn_Send = "P00310";

        /// <summary>
        /// 门诊发药时是否显示隔天待发药信息
        /// </summary>
        public const string OutDrug_Show_OldSended = "P00311";

        /// <summary>
        /// 门诊采用自动配药模式  {F8D76CE8-6A0C-469b-AC43-4F69B2FCBAD8}
        /// </summary>
        public const string OutDrug_Auto_Druged = "P00312";

        /// <summary>
        /// 门诊采用自动发药模式  {DBB3C382-BB23-463b-8847-2F73C55F2586}
        /// </summary>
        public const string OutDrug_Auto_Send = "P00313";

        /// <summary>
        /// 门诊收费时是否进行预扣库存操作
        /// </summary>
        public const string OutDrug_Pre_Out = "P00320";

        /// <summary>
        /// 新增药品是否需审核后生效
        /// </summary>
        public const string NewDrug_Need_Approve = "P00501";

        /// <summary>
        /// 药品特殊标记信息维护设置   {6F6120F5-6D88-47ce-AF9C-0CF781DE412F}
        /// </summary>
        public const string Set_Item_SpecialFlag = "P00502";     

        /// <summary>
        /// 药品信息维护时  对于包装数量允许输入的最大位数
        /// </summary>
        public const string Max_PackQty_Digit = "P00505";

        /// <summary>
        /// 药品信息维护时  对于基本剂量允许输入的最大位数
        /// </summary>
        public const string Max_BaseDose_Digit = "P00506";

        /// <summary>
        /// 药品信息维护时  对于价格允许输入的最大位数
        /// </summary>
        public const string Max_Price_Digit = "P00507";

        /// <summary>
        /// 商品名自定义码允许输入的最大位数 
        /// </summary>
        public const string Max_NameCustomeCode_Digit = "P00508";

        /// <summary>
        /// 其他自定义码允许输入的最大位数
        /// </summary>
        public const string Max_CustomeCode_Digit = "P00509";

        /// <summary>
        /// 是否允许通用名维护获得Tab顺序
        /// </summary>
        public const string Have_Regular_Tab = "P00510";

        /// <summary>
        /// 是否允许英文名维护获得Tab顺序
        /// </summary>
        public const string Have_English_Tab = "P00511";

        /// <summary>
        /// 是否允许国标/国家编码维护获得Tab顺序
        /// </summary>
        public const string Have_Code_Tab = "P00512";

        /// <summary>
        /// 协定处方是否管理库存 如果不管理库存 则收费时拆分明细 否则不进行拆分
        /// </summary>
        public const string Nostrum_Manage_Store = "P00513";

        /// <summary>
        /// 药品盘点是否按批号进行盘点
        /// </summary>
        public const string Check_With_Batch = "P00531";

        /// <summary>
        /// 历史盘点单获取时是否只取结存状态 
        /// </summary>
        public const string Check_History_State = "P00532";

        /// <summary>
        /// 盘点过程中是否在录入时更新封帐库存
        /// 
        /// {F2DA66B0-0AB4-4656-BB21-97CB731ABA4D}  增加控制参数
        /// </summary>
        public const string Check_UpdateFStore_RealTime = "P00533";

        /// <summary>
        /// 自动生成计划时 计算日均出库量，日消耗 统计默认天数
        /// </summary>
        public const string Plan_Expand_Days = "P00540";

        /// <summary>
        /// 列表选择控件是否显示行标题
        /// </summary>
        public const string Plan_Show_RowHeader = "P00542";

        /// <summary>
        /// 是否允许通过行索引确认选择数据
        /// </summary>
        public const string Plan_Num_SelectRow = "P00543";

        /// <summary>
        /// 是否对计划量是否为零进行判断
        /// </summary>
        public const string Plan_NumZero_Valid = "P00544";

        /// <summary>
        /// 采购是否需要审核后生效
        /// </summary>
        public const string Stock_Need_Approve = "P00551";

        /// <summary>
        /// 采购审核时 是否允许修改相应的计划信息
        /// </summary>
        public const string Stock_Edit_InPlan = "P00553";

        /// <summary>
        /// 采购计划/审核时 是否允许修改计划购入价
        /// </summary>
        public const string Stock_Edit_Price = "P00554";

        /// <summary>
        /// 采购指定时是否使用字典信息内默认的供货公司
        /// </summary>
        public const string Stock_Use_DefaultData = "P00555";

        /// <summary>
        /// 药品入库是否需要审核 原参数 500002
        /// </summary>
        public const string In_Need_Approve = "P00570";

        /// <summary>
        /// 退出时是否保存上一次操作权限类型
        /// </summary>
        public const string In_Save_Priv = "P00571";

        /// <summary>
        /// 药品核准入库时是否更新药品字典信息购入价及批准文号 0 不更新 1 更新  原参数 510002
        /// </summary>
        public const string In_EditPrice_WhenApprove = "P00572";

        /// <summary>
        /// 价让出库时默认加价率
        /// </summary>
        public const string Out_Transfer_DefaultRate = "P00573";

        /// <summary>
        /// 价让出库时是否使用批发价
        /// </summary>
        public const string Out_Transfer_UseWholePrice = "P00574";

        /// <summary>
        /// 出库时是否选择批号进行出库
        /// {DE934736-B2C2-44a4-A218-2DC38E1620BA}
        /// </summary>
        public const string Out_Choose_BatchNO = "P00575";

        /// <summary>
        /// 库存货位号允许输入最大位数
        /// </summary>
        public const string Max_Place_Code = "P00580";

        /// <summary>
        /// 是否启用有效期警示
        /// </summary>
        public const string Valid_Warn_Enabled = "P00581";

        /// <summary>
        /// 有效期最大警示天数
        /// </summary>
        public const string Valid_Warn_Days = "P00582";

        /// <summary>
        /// 有效期警示颜色
        /// </summary>
        public const string Valid_Warn_Color = "P00583";

        /// <summary>
        /// 有效期采用实时获取获取方式
        /// </summary>
        public const string Valid_Warn_SourceRealTime = "P00584";

        /// <summary>
        /// 是否采用库存上下限报警
        /// </summary>
        public const string Store_Warn_Enabled = "P00585";

        /// <summary>
        /// 报警时是否采用弹出信息方式 不使用字体颜色警示
        /// </summary>
        public const string Store_Warn_Msg = "P00586";

        /// <summary>
        /// 报警字体颜色警示
        /// </summary>
        public const string Store_Warn_Color = "P00587";

        /// <summary>
        /// /药房/药库通用查询大类
        /// </summary>
        public const string Query_Commo_Type = "P00900";

        /// <summary>
        /// 药库查询大类
        /// </summary>
        public const string Query_PI_Type = "P00901";

        /// <summary>
        /// 门诊预扣库存类型 0医生站预扣 1收费时预扣 by Sunjh 2010-9-28 {0B55D338-67A8-415a-84F1-7287FB1454A5}
        /// </summary>
        public const string OutDrug_Pre_Out_Type = "P01015";

        /// <summary>
        /// 一般入库是否根据上次入库自动填充有效期、批号、购入价 by Sunjh 2010-10-28 {97C93751-7EED-4160-931A-EC77C1F4E291}
        /// </summary>
        public const string CommonInput_Auto_FillInfo = "P01016";

        /// <summary>
        /// 门诊配发药时是否单号在检索框中回车后自动配发药确认 by Sunjh 2010-11-1 {E1FDEF4A-BBA8-4210-BDBA-6FA8130244B9}
        /// </summary>
        public const string OutDrug_AutoSave_ByEnter = "P01017";

        #region 以下作废参数

        /// <summary>
        /// 参数作 废 药房单据自动打印时，是否同时完成出库
        /// </summary>
        //public const string InDrug_AutoPrint_Output = "P00117";

        /// <summary>
        /// 参数作 废 操作员无修改权限时 是否允许对药品信息查询浏览
        /// </summary>
        //public const string Query_No_EditPriv = "P00503";

        /// <summary>
        /// 参数作 废 操作员无修改权限时 是否允许对药品信息导出/打印
        /// </summary>
        //public const string Export_No_EditPriv = "P00504";

        /// <summary>
        /// 参数作 废  住院药房摆药核准时是否允许部分核准  
        /// </summary>
        //public const string InDrug_Part_Approve = "P00111";

        /// <summary>
        /// 参数作 废 药房摆药单打印处理 是否预览显示要打印的摆药单
        /// </summary>
        //public const string InDrug_Priview_Bill = "P00112";

        /// <summary>
        /// 作 废 门诊标签打印接口实现
        /// </summary>
        //public const string Clinic_Print_Label = "P01000";

        /// <summary>
        /// 作 废 门诊草药清单打印接口实现
        /// </summary>
        //public const string Clinic_Print_Bill = "P01001";

        /// <summary>
        /// 作 废 住院摆药打印接口函数
        /// </summary>
        //public const string Inpatient_Print_Fun = "P01009";

        /// <summary>
        /// 作 废 住院摆药单接口实现(带控件)
        /// </summary>
        //public const string Inpatient_Print_Bill = "P01010";

        /// <summary>
        /// 作 废 入库单
        /// </summary>
        //public const string Pha_Input_Bill = "P01011";

        /// <summary>
        ///  作 废 出库单
        /// </summary>
        //public const string Pha_Output_Bill = "P01012";

        /// <summary>
        /// 作 废 调拨单
        /// </summary>
        //public const string Pha_Chage_Bill = "P01013";

        /// <summary>
        /// 作 废  处方单接口
        /// </summary>
        //public const string Clinic_Print_Recipe = "P01014";

        /// <summary>
        /// 作 废  配置标签打印接口
        /// </summary>
        //public const string Compound_Print_Label = "P01015";

        #endregion

        #endregion

        private System.Collections.Hashtable hsDescription;

        public PharmacyConstant()
        {
            hsDescription = new System.Collections.Hashtable();

            this.hsDescription.Add(Can_Set_NoSplitAtAll, "拆分属性维护时 药品是否可以设置为不可拆分属性");
            this.hsDescription.Add(Can_Set_SplitAndNoInteger, "拆分属性维护时 药品是否可以设置为可拆分不取整");
            this.hsDescription.Add(Can_Set_SplitAndUpperToInteger, "拆分属性维护时 药品是否可以设置为可拆分上取整");
            this.hsDescription.Add(Can_Set_NosplitAndDayToInteger, "拆分属性维护时 药品是否可以设置为不可拆分当日取整");
            this.hsDescription.Add(Can_Set_SplitAndDeptToInteger, "拆分属性维护时 药品是否可以设置为可拆分按科室取整");
            this.hsDescription.Add(Can_Set_SplitAndNurceCellToInteger, "拆分属性维护时 药品是否可以设置为可拆分按病区取整");
            this.hsDescription.Add(Can_Set_NoSplitAndPackUnit, "拆分属性维护时 药品是否可以设置为不可拆分按包装单位取整启用患者库存");
          
            //
            this.hsDescription.Add(InDrug_Need_Approve, "住院药房摆药是否需要核准");

            //ucDrugBillApprove 调用 InitCtrlParam
            this.hsDescription.Add(InDrug_Need_Priv, "住院药房摆药核准时是否进行权限判断 即只有药师/药剂师允许核准操作");
            //this.hsDescription.Add(InDrug_Part_Approve, "住院药房摆药核准时是否允许部分核准");

            //ucDrugDetail 调用 InitControlParam
            //this.hsDescription.Add(InDrug_Priview_Bill, "药房摆药单打印处理 是否预览显示要打印的摆药单");

            //ucDrugMessage 调用 InitControlParam
            this.hsDescription.Add(InDrug_Auto_Check, "按科室添加待摆药信息时 是否自动选中");

            //ucDrugDetail 调用 InitControlParam
            this.hsDescription.Add(InDrug_Show_PatientTot, "药房摆药单打印处理 是否显示本单据内患者发药汇总信息");
            this.hsDescription.Add(InDrug_Show_DeptTot, "药房摆药单打印处理 是否显示本单据的科室汇总发药信息");

            //tvDrugMessage 调用 InitControlParam
            this.hsDescription.Add(InDrug_Show_DeptFirst, "待摆药数据列表显示时 是否按科室优先方式显示");
            //this.hsDescription.Add(InDrug_AutoPrint_Output, "药房单据自动打印时 是否同时完成出库");

            this.hsDescription.Add(InDrug_Pre_Out, "住院收费时 是否使用预扣库存方式");

            //{DE934736-B2C2-44a4-A218-2DC38E1620BA}
            this.hsDescription.Add(Out_Choose_BatchNO, "出库时是否选择批号进行出库");

            //ucDrugTerminal 调用 InitControlParam
            this.hsDescription.Add(Terminal_Save_Refresh, "门诊发药终端保存后 是否刷新");

            //ucClinicDrug 调用 InitControlParam
            this.hsDescription.Add(OutDrug_Show_Days, "门诊发药界面是否显示付数");
            this.hsDescription.Add(OutDrug_Print_List, "配药确认后是否打印配药清单");
            this.hsDescription.Add(OutDrug_Print_Recipe, "发药确认后是否打印处方");

            //ucClinicTree 调用 InitControlParam
            this.hsDescription.Add(OutDrug_OperCode_Length, "配药检索时工号补足位数 －1 不需补位  原控制参数值 500007");
            this.hsDescription.Add(OutDrug_Need_Priv, "配/发药窗口是否进行权限控制 (只有药师可以操作) 原控制参数值 500011");
            this.hsDescription.Add(OutDrug_Print_BackRecipe, "门诊标签自动打印时  是否对存在作废记录的处方不打印 原控制参数值500014");

            this.hsDescription.Add(OutDrug_Pre_Out, "门诊收费时是否进行预扣库存操作");
            this.hsDescription.Add(OutDrug_Show_OldSended, "门诊发药时是否显示隔天待发药信息");

            //{F8D76CE8-6A0C-469b-AC43-4F69B2FCBAD8} 
            this.hsDescription.Add(OutDrug_Auto_Druged, "门诊配药采用自动配药模式");


            //ucPharmacyManager 调用 InitControlParam
            this.hsDescription.Add(NewDrug_Need_Approve, "新增药品是否需审核后生效");

            //ucPharmacyQuery 调用 InitControlParam
            this.hsDescription.Add( Set_Item_SpecialFlag, "药品字典信息维护中，特殊标记信息设置" );         
   
            //屏蔽作废参数
            //this.hsDescription.Add(Query_No_EditPriv, "操作员无修改权限时 是否允许对药品信息查询浏览");
            //this.hsDescription.Add(Export_No_EditPriv, " 操作员无修改权限时 是否允许对药品信息导出/打印");

            this.hsDescription.Add(Max_PackQty_Digit, "药品信息维护时  对于包装数量允许输入的最大位数");
            this.hsDescription.Add(Max_BaseDose_Digit, "药品信息维护时  对于基本剂量允许输入的最大位数");
            this.hsDescription.Add(Max_Price_Digit, "药品信息维护时  对于价格允许输入的最大位数");
            this.hsDescription.Add(Max_NameCustomeCode_Digit, "商品名自定义码允许输入的最大位数");
            this.hsDescription.Add(Max_CustomeCode_Digit, "其他自定义码允许输入的最大位数");
            this.hsDescription.Add(Have_Regular_Tab, "是否允许通用名维护获得Tab顺序");
            this.hsDescription.Add(Have_English_Tab, "是否允许英文名维护获得Tab顺序");
            this.hsDescription.Add(Have_Code_Tab, "是否允许国标/国家编码维护获得Tab顺序");
            this.hsDescription.Add(Nostrum_Manage_Store, "协定处方管理库存 如果不管理库存 则收费时拆分明细 否则不进行拆分");

            //ucCheckManager InitData函数内处理
            this.hsDescription.Add(Check_With_Batch, " 药品盘点是否按批号进行盘点");
            this.hsDescription.Add(Check_History_State, "历史盘点单获取时是否只取结存状态 ");

            //ucInPlan  调用 InitControlParam
            this.hsDescription.Add(Plan_Expand_Days, "自动生成计划时 计算日均出库量，日消耗 统计默认天数");
            this.hsDescription.Add(Plan_Show_RowHeader, "列表选择控件是否显示行标题");
            this.hsDescription.Add(Plan_Num_SelectRow, "是否允许通过行索引确认选择数据");
            this.hsDescription.Add(Plan_NumZero_Valid, "是否对计划量是否为零进行判断");

            //ucStockPlan InitControlParam
            this.hsDescription.Add(Stock_Need_Approve, "采购是否需要审核后生效");
            this.hsDescription.Add(Stock_Edit_InPlan, "采购审核时 是否允许修改相应的计划信息");
            this.hsDescription.Add(Stock_Edit_Price, "采购计划/审核时 是否允许修改计划购入价");
            this.hsDescription.Add(Stock_Use_DefaultData, "采购指定时是否使用字典信息内默认的供货公司");

            this.hsDescription.Add(In_Need_Approve, "药品入库是否需要审核 原参数 500002");

            //ucIMAInOutBase InitControlParam
            this.hsDescription.Add(In_Save_Priv, "退出时是否保存上一次操作权限类型");

            this.hsDescription.Add(In_EditPrice_WhenApprove, "药品核准入库时是否更新药品字典信息购入价及批准文号 0 不更新 1 更新  原参数 510002");
            
            this.hsDescription.Add(Out_Transfer_DefaultRate,"价让出库时默认加价率");
            this.hsDescription.Add(Out_Transfer_UseWholePrice,"价让出库时是否使用批发价");

            //ucStorageManager InitControlParam
            this.hsDescription.Add(Max_Place_Code, "库存货位号允许输入最大位数");
            this.hsDescription.Add(Valid_Warn_Enabled, "是否启用有效期警示");
            this.hsDescription.Add(Valid_Warn_Days, "有效期最大警示天数");
            this.hsDescription.Add(Valid_Warn_Color, "有效期警示颜色");
            this.hsDescription.Add(Valid_Warn_SourceRealTime, "有效期采用实时获取获取方式");
            this.hsDescription.Add(Store_Warn_Enabled, "是否采用库存上下限报警");
            this.hsDescription.Add(Store_Warn_Msg, "报警时是否采用弹出信息方式 不使用字体颜色警示");
            this.hsDescription.Add(Store_Warn_Color, "报警字体颜色警示");

            //ucGeneryColor 
            this.hsDescription.Add(Query_Commo_Type, "药房/药库通用查询大类");
            this.hsDescription.Add(Query_PI_Type, "药库查询大类");

            //屏蔽作废参数
            //this.hsDescription.Add(Clinic_Print_Label, "门诊标签打印接口实现");
            //this.hsDescription.Add(Clinic_Print_Bill, "门诊草药清单打印接口实现");
            //this.hsDescription.Add(Inpatient_Print_Bill, "住院摆药单接口实现(带控件)");

            //屏蔽作废参数
            //this.hsDescription.Add(Inpatient_Print_Fun, "住院摆药打印接口函数");

            //屏蔽作废参数
            //this.hsDescription.Add(Pha_Input_Bill, "入库单据");
            //this.hsDescription.Add(Pha_Output_Bill, "出库单据");
            //this.hsDescription.Add(Pha_Chage_Bill, "调拨单据");

            this.hsDescription.Add(OutDrug_Warn_Druged, "门诊配药时 是否进行库存警戒判断");
            this.hsDescription.Add(OutDrug_Warn_Send, "门诊发药时 是否进行库存警戒判断");
            this.hsDescription.Add(OutDrug_Pre_Out_Type, "门诊预扣库存类型0医生站预扣1收费时预扣");
            this.hsDescription.Add(CommonInput_Auto_FillInfo, "一般入库是否根据上次入库自动填充有效期、批号、购入价");
            this.hsDescription.Add(OutDrug_AutoSave_ByEnter, "门诊配发药时是否单号在检索框中回车后自动配发药确认");
            this.hsDescription.Add(OutDrug_Auto_Send, "门诊药房是否采用自动发药模式");

            //屏蔽作废参数
            //this.hsDescription.Add(Clinic_Print_Recipe,"处方单打印接口实现");

            //this.hsDescription.Add(Compound_Print_Label, "配置标签打印接口");

        }

        /// <summary>
        /// 获取参数描述
        /// </summary>
        /// <param name="ctrlCode">参数名称</param>
        /// <returns>成功找到返回参数描述 未找到返回空数据</returns>
        public string GetParamDescription(string ctrlCode)
        {
            if (this.hsDescription.ContainsKey(ctrlCode))
            {
                return this.hsDescription[ctrlCode] as string;
            }
            else
            {
                return "";
            }
        }
    }

   /// <summary>
   /// 门诊挂号参数
   /// </summary>
    public class RegistrationConstant
    {
        
       
        /// <summary>
        /// 门诊挂号－挂号级别显示列数
        /// </summary>
        public const string Const_Display_RegLevel_ColumnNumber = "400001";
        /// <summary>
        /// 门诊挂号－挂号科室显示列数
        /// </summary>
        public const string Const_Display_RegDept_ColumnNumber = "400002";
        /// <summary>
        /// 门诊挂号－合同单位显示列数
        /// </summary>
        public const string Const_Display_RegPact_ColumnNumber = "400003";
        /// <summary>
        /// 门诊挂号－出诊教授显示列数
        /// </summary>
        public const string Const_Display_RegProfessor_ColumnNumber = "400004";
        /// <summary>
        /// 门诊挂号－合同单位默认代码
        /// </summary>
        public const string Const_Display_DefaultPact = "400005";
        /// <summary>
        /// 门诊退号－允许退号天数
        /// </summary>
        public const string Const_Allow_QuitReg_Days = "400006";
        /// <summary>
        /// 门诊挂号－公费患者允许日挂号限额
        /// </summary>
        public const string Const_Allow_PubPatient_RegLimitCost = "400007";
        /// <summary>
        /// 门诊挂号－诊金是否报销
        /// </summary>
        public const string Const_Dialog_IsPub = "400008";
        /// <summary>
        /// 医保对照是否维护时同时进行
        /// </summary>
        public const string Const_Yb_Same_Time = "400009";
        /// <summary>
        /// 门诊挂号－专家号是否先输科室
        /// </summary>
        public const string Const_RegProfessor_IsFirstDept = "400010";
        /// <summary>
        /// 门诊挂号－是否只显示出诊科室
        /// </summary>
        public const string Const_Display_Only_Dept = "400011";
        /// <summary>
        /// 是否允许维护生育保险
        /// </summary>
        public const string Const_Is_SYBX = "400012";
        /// <summary>
        /// 门诊挂号－允许打印挂号发票天数
        /// </summary>
        public const string Const_RegInvoiceDays = "400014";
        /// <summary>
        /// 挂号是否允许超出排班限额
        /// </summary>
        public const string Const_Allow_Beyond_Limit = "400015";
        /// <summary>
        /// 门诊挂号－1按机器获取发票号,2按操作员获取发票(物理票号)
        /// </summary>
        public const string Const_GetRecipe_Way = "400019";
        /// <summary>
        /// 门诊挂号－诊断是否录入ICD码
        /// </summary>
        public const string Const_IsICD = "400016";
        /// <summary>
        /// 门诊挂号－打印哪种收据Invoice?Recipe
        /// </summary>
        public const string Const_InvoiceType = "400017";

        /// <summary>
        /// 门诊挂号－排班默认时间段,0默认为整个午别
        /// </summary>
        public const string Const_Default_Noon = "400018";
        /// <summary>
        /// 门诊挂号－是否跳到预约流水号处
        /// </summary>
        public const string Const_Jump_To_Yuyue = "400020";
        
        /// <summary>
        /// 门诊挂号－科室、医生下拉列表是否显示全院,默认是
        /// </summary>
        public const string Const_Alow_Quanyuan = "400022";

        /// <summary>
        /// 门诊挂号－光标是否需跳到预约时间段处
        /// </summary>
        public const string Const_Jump_To_YuyueTime = "400023";
        /// <summary>
        /// 门诊挂号－保存时是否提示
        /// </summary>
        public const string Const_IsSaveMsg = "400024";
        /// <summary>
        /// 400025	门诊挂号－排班是否输入医生类别
        /// </summary>
        public const string Const_Schama_Doct_IsDoctType = "400025";
        /// <summary>
        /// 门诊挂号－是否预约号看诊序号排在现场号前面别
        /// </summary>
        public const string Const_IsBookingBeforeLocal = "400026";
        /// <summary>
        /// 门诊挂号－挂号费中otherfee的意义 0:床费(广医专用) 1：病历本费 2：其他费
        /// </summary>
        public const string Const_Is_AirCondition = "400027";
        /// <summary>
        /// 门诊挂号－专家号是否区分教授级别
        /// </summary>
        public const string Const_IsDivision_ProLevel = "400028";
        /// <summary>
        /// 门诊挂号－多张号是否作为加号
        /// </summary>
        public const string Const_IsMultAdd = "400029";
        /// <summary>
        /// 门诊挂号-排班是否输入挂号级别
        /// </summary>
        public const string Const_IsInputRegLevel = "400030";
        /// <summary>
        /// 门诊挂号－获得发票号方案 
        /// </summary>
        public const string Const_GetInvoiceWay = "400031";
        /// <summary>
        /// 构造函数
        /// </summary>
        public RegistrationConstant()
        {
        }
        /// <summary>
        /// 获取参数描述
        /// </summary>
        /// <param name="ctrlCode">参数名称</param>
        /// <returns>成功找到返回参数描述 未找到返回空数据</returns>
        //public string GetParamDescription(string ctrlCode)
        //{
        //    if (this.hsDescription.ContainsKey(ctrlCode))
        //    {
        //        return this.hsDescription[ctrlCode] as string;
        //    }
        //    else
        //    {
        //        return "";
        //    }
        //}
    }

    public class AccountConstant
    {
        #region 帐户管理设置常量
        /// <summary>
        /// 新建卡是否收取卡成本费，0=不收取，1=收取，2=按卡类别收取
        /// </summary>
        public const string IsAcceptCardFee = "800001";
        /// <summary>
        /// 新建卡成本费金额
        /// </summary>
        public const string AcceptCardFee = "800002";
        /// <summary>
        /// 补卡是否收取卡成本费 0=不收取，1=收取，2=按卡类别收取
        /// </summary>
        public const string IsAcceptChangeCardFee = "800003";
        /// <summary>
        /// 换卡时成本费金额
        /// </summary>
        public const string AcceptChangeCardFee = "800004";
        /// <summary>
        /// 退卡时退费 0=不退，1=退费
        /// </summary>
        public const string ReturnCardReturnFee = "800014";

        public const string ChangeCardIsStopAccount = "8000005";
        /// <summary>
        /// 就诊卡发放时，是否实时判断患者合同单位；0-不判断，1-判断
        /// {C49AFFB1-D0EA-41bf-AD60-9F921D91E93D}
        /// </summary>
        public const string BuildCardIsJudgePact = "800007";
        /// <summary>
        /// 预交金扣费时，是否需要验证密码
        /// 0 = 不需要；1 = 需要；
        /// {5CCCF7F7-E9A5-4982-A5AF-C3ADB99DD9F0}
        /// </summary>
        public const string NeedCheckAccountPW = "800008";
        /// <summary>
        /// 办帐户时，是否需要验证有效证件；0-需要，1-不需要
        /// {15148270-E4C9-4724-8227-524C9C0A3076}
        /// </summary>
        public const string JudgeCredentialCreating = "800009";
        /// <summary>
        /// 增加指定最小费用项目不受执行科室限定
        /// {A3FBD5CE-CB44-4e42-BAE2-4397E4F4AEC0}
        /// </summary>
        public const string MustExcuAccountFee = "800010";
        /// <summary>
        /// 医保身份ID, 多个以“|”分开
        /// {870D6A8C-9B17-4e33-A0B6-DB0F1CF15BAE}
        /// </summary>
        public const string SIPactUnitID = "800011";
        /// <summary>
        /// 不支持终端扣费的合同单位
        /// </summary>
        public const string UnTerminalPactCode = "800012";
        #endregion

        System.Collections.Hashtable hasTable = null;
        public AccountConstant()
        {
            hasTable = new System.Collections.Hashtable();
            hasTable.Add(IsAcceptCardFee, "发卡时是否收取卡成本费");
            hasTable.Add(AcceptCardFee, "发卡成本费金额");
            hasTable.Add(IsAcceptChangeCardFee, "更换卡是否收取卡成本费");
            hasTable.Add(AcceptChangeCardFee, "更换卡时成本费金额");
            hasTable.Add(ChangeCardIsStopAccount, "更换卡是否停用帐户");
            hasTable.Add(BuildCardIsJudgePact, "就诊卡发放时，是否实时判断患者合同单位");
            hasTable.Add(NeedCheckAccountPW, "预交金扣费时，是否需要验证密码");
            hasTable.Add(JudgeCredentialCreating, "办帐户时，是否需要验证有效证件；0-需要，1-不需要"); // {15148270-E4C9-4724-8227-524C9C0A3076}
            hasTable.Add(MustExcuAccountFee, "指定最小费用项目不受执行科室限定");
            hasTable.Add(SIPactUnitID, "医保身份ID"); // {870D6A8C-9B17-4e33-A0B6-DB0F1CF15BAE}
            hasTable.Add(UnTerminalPactCode, "不支持终端扣费的合同单位"); // {9635BF11-D633-409e-8880-2DB29CB830F7}
            hasTable.Add(ReturnCardReturnFee, "退卡时退费 0=不退，1=退费"); 
        }
        /// <summary>
        /// 获取参数描述
        /// </summary>
        /// <param name="ctrlCode">参数编码</param>
        /// <returns>成功找到返回参数描述 未找到返回空数据</returns>
        public  string GetParamDescription(string ctrlCode)
        {
            if (this.hasTable.ContainsKey(ctrlCode))
            {
                return this.hasTable[ctrlCode] as string;
            }
            else
            {
                return "";
            }
        }
    }



    /// <summary>
    /// 医嘱常数 以2开头 {97FA5C9D-F454-4aba-9C36-8AF81B7C9CCF}
    /// </summary>
    public class MetConstant
    {
        /// <summary>
        /// 输液卡最多条数
        /// </summary>
        //public const string CircuitCard_MaxLine = "O00001";

        ///// <summary>
        ///// 死亡的转归代码
        ///// </summary>
        //public const string Death_ZG_ID = "200039";

        ///// <summary>
        ///// 死亡患者显示的天数
        ///// </summary>
        //public const string DeathPatient_View_Days = "200040";

        ///// <summary>
        ///// 护士站是否总是显示死亡患者
        ///// </summary>
        //public const string Is_View_DeathPatient = "200041";

        /// <summary>
        /// 小时计费医嘱的频次代码
        /// </summary>
        public const string Hours_Frequency_ID = "200042";

        /// <summary>
        /// 医嘱重整方式  {D05BA7C4-3158-48aa-B581-0211E2CAAD4C}  增加控制参数
        /// </summary>
        public const string Order_RetidyType = "200210";           //医嘱重整处理方式  方式一：保留原医嘱 新增重整状态医嘱   方式二：修改原医嘱为重整状态 新增有效医嘱

        /// <summary>
        /// 退费单打印接口
        /// </summary>
        //public const string IQuitFeeInterface = "200043";

        ///// <summary>
        ///// 接诊时是否收取费用
        ///// </summary>
        //public const string Is_Arive_Fee = "200044";

        ///// <summary>
        ///// 是否打印退费申请单
        ///// </summary>
        //public const string Is_Print_QuitFeeSheet = "200045";

        ///// <summary>
        ///// 审核、分解医嘱时是否判断库存
        ///// </summary>
        //public const string JUDGE_DRUG_STORE = "200046";

        ///// <summary>
        ///// 浮动价格窗口选择接口
        ///// </summary>
        //public const string ISelectUndrugPrice = "200047";
        private System.Collections.Hashtable hsDescription;
        public MetConstant()
        {
            hsDescription = new System.Collections.Hashtable();

            //this.hsDescription.Add(CircuitCard_MaxLine, "每张输液卡中能打印的最多条数");
            //this.hsDescription.Add(Death_ZG_ID, "死亡的转归代码");
            //this.hsDescription.Add(DeathPatient_View_Days, "死亡患者显示的天数");
            //this.hsDescription.Add(Is_View_DeathPatient, "护士站是否总是显示死亡患者");
            //this.hsDescription.Add(IQuitFeeInterface, "退费单打印接口");
            //this.hsDescription.Add(Is_Arive_Fee, "接诊时是否收取费用");
            //this.hsDescription.Add(JUDGE_DRUG_STORE, "审核临时医嘱、分解长期医嘱时是否判断库存");
            //this.hsDescription.Add(ISelectUndrugPrice, "浮动价格选择窗口");
        }
    }
}
