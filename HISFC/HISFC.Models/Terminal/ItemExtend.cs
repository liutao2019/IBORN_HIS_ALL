using System;
using FS.HISFC.Models.Base;

namespace FS.HISFC.Models.Terminal
{
	/// <summary>
	/// ItemExtend <br></br>
	/// [功能描述: 非药品信息的扩展信息]<br></br>
	/// [创 建 者: sunxh]<br></br>
	/// [创建时间: 2005-3-3]<br></br>
	/// <修改记录
	///		修改人=''
	///		修改时间=''
	///		修改目的=''
	///		修改描述=''
	///  />
	/// </summary>
    [Serializable]
    public class ItemExtend : FS.FrameWork.Models.NeuObject
	{
		public ItemExtend()
		{
			//
			// TODO: 在此处添加构造函数逻辑
			//
		}

		#region 定义量

		/// <summary>
		/// 科室
		/// </summary>
		FS.HISFC.Models.Base.Department dept = new Department();

		/// <summary>
		/// 单位标识
		/// </summary>
		string unitFlag;

		/// <summary>
		/// 预约地点
		/// </summary>
		string bookLocate;

		/// <summary>
		/// 预约时间
		/// </summary>
		string bookTime = "";

		/// <summary>
		/// 执行地点
		/// </summary>
		string executeLocate;

		/// <summary>
		/// 取报告时间
		/// </summary>
		string reportTime = "";

		/// <summary>
		/// 有创无创
		/// </summary>
		string hurtFlag;

		/// <summary>
		/// 是否科内预约
		/// </summary>
		string selfBookFlag;

		/// <summary>
		/// 所属专业
		/// </summary>
		string speciality;

		/// <summary>
		/// 临床意义
		/// </summary>
		string clinicMeaning;

		/// <summary>
		/// 标本量
		/// </summary>
		decimal simpleQty;

		/// <summary>
		/// 知情同意书
		/// </summary>
		string reasonableFlag;

		/// <summary>
		/// 标本
		/// </summary>
		string simpleKind;

		/// <summary>
		/// 采样方法
		/// </summary>
		string simpleWay;

		/// <summary>
		/// 标本单位
		/// </summary>
		string simpleUnit;

		/// <summary>
		/// 容器
		/// </summary>
		string container;

		/// <summary>
		/// 正常值范围
		/// </summary>
		string scope;

		/// <summary>
		/// 设备类型
		/// </summary>
		string machineType = "";

		/// <summary>
		/// 抽血方式
		/// </summary>
		string bloodWay = "";

		/// <summary>
		/// 扩展
		/// </summary>
		string ext1 = "";

		/// <summary>
		/// 扩展
		/// </summary>
		string ext2 = "";

		/// <summary>
		/// 扩展
		/// </summary>
		string ext3 = "";

		#endregion

		#region 属性

		/// <summary>
		/// 科室
		/// </summary>
		public FS.HISFC.Models.Base.Department Dept
		{
			get
			{
				return this.dept;
			}
			set
			{
				this.dept = value;
			}
		}

		/// <summary>
		/// 单位标识
		/// </summary>
		public string UnitFlag
		{
			get
			{
				return unitFlag;
			}
			set
			{
				unitFlag = value;
			}
		}
		
		/// <summary>
		/// 预约地点
		/// </summary>
		public string BookLocate
		{
			get
			{
				return bookLocate;
			}
			set
			{
				bookLocate = value;
			}
		}

		/// <summary>
		/// 预约时间
		/// </summary>
		public string BookTime
		{
			get
			{
				return this.bookTime;
			}
			set
			{
				this.bookTime = value;
			}
		}

		/// <summary>
		/// 执行地点
		/// </summary>
		public string ExecuteLocate
		{
			get
			{
				return executeLocate;
			}
			set
			{
				executeLocate = value;
			}

		}

		/// <summary>
		/// 取报告时间
		/// </summary>
		public string ReportTime
		{
			get
			{
				return this.reportTime;
			}
			set
			{
                this.reportTime = value;
			}
		}

		/// <summary>
		/// 有创无创
		/// </summary>
		public string HurtFlag
		{
			get
			{
				return hurtFlag;
			}
			set
			{
				hurtFlag = value;
			}

		}

		/// <summary>
		/// 是否科内预约
		/// </summary>
		public string SelfBookFlag
		{
			get
			{
				return selfBookFlag;
			}
			set
			{
				selfBookFlag = value;
			}

		}

		/// <summary>
		/// 所属专业
		/// </summary>
		public string Speciality
		{
			get
			{
				return speciality;
			}
			set
			{
				speciality = value;
			}

		}

		/// <summary>
		/// 临床意义
		/// </summary>
		public string ClinicMeaning
		{
			get
			{
				return clinicMeaning;
			}
			set
			{
				clinicMeaning = value;
			}

		}

		/// <summary>
		/// 标本量
		/// </summary>
		public decimal SimpleQty
		{
			get
			{
				return simpleQty;
			}
			set
			{
				simpleQty = value;
			}

		}

		/// <summary>
		/// 知情同意书
		/// </summary>
		public string ReasonableFlag
		{
			get
			{
				return reasonableFlag;
			}
			set
			{
				reasonableFlag = value;
			}

		}

		/// <summary>
		/// 采样
		/// </summary>
		public string SimpleKind
		{
			get
			{
				return simpleKind;
			}
			set
			{
				simpleKind = value;
			}

		}

		/// <summary>
		/// 采样方法
		/// </summary>
		public string SimpleWay
		{
			get
			{
				return simpleWay;
			}
			set
			{
				simpleWay = value;
			}

		}

		/// <summary>
		/// 标本单位
		/// </summary>
		public string SimpleUnit
		{
			get
			{
				return simpleUnit;
			}
			set
			{
				simpleUnit = value;
			}

		}

		/// <summary>
		/// 容器
		/// </summary>
		public string Container
		{
			get
			{
				return container;
			}
			set
			{
				container = value;
			}

		}

		/// <summary>
		/// 正常值范围
		/// </summary>
		public string Scope
		{
			get
			{
				return scope;
			}
			set
			{
				scope = value;
			}

		}
		/// <summary>
		/// 设备类型
		/// </summary>
		public string MachineType
		{
			get
			{
				return machineType;
			}
			set
			{
				machineType = value;
			}
		}

		/// <summary>
		/// 抽血方式
		/// </summary>
		public string BloodWay
		{
			get
			{
				return bloodWay;
			}
			set
			{
				bloodWay = value;
			}
		}

		/// <summary>
		/// 扩展
		/// </summary>
		public string Ext1
		{
			get
			{
				return ext1;
			}
			set
			{
				ext1 = value;
			}
		}

		/// <summary>
		/// 扩展
		/// </summary>
		public string Ext2
		{
			get
			{
				return ext2;
			}
			set
			{
				ext2 = value;
			}
		}

		/// <summary>
		/// 扩展
		/// </summary>
		public string Ext3
		{
			get
			{
				return ext3;
			}
			set
			{
				ext3 = value;
			}
		}

		#endregion

		#region 过时

		/// <summary>
		/// 科室代码
		/// </summary>
		[Obsolete("已经过时，更改为Dept", true)]
		public string DeptCode
		{
			get
			{
				return this.dept.ID;
			}
			set
			{
				this.dept.ID = value;
			}
		}

		/// <summary>
		/// 预约时间
		/// </summary>
		[Obsolete("已经过时，更改为BookTime", true)]
		public string BookDate
		{
			get
			{
				return this.bookTime;
			}
			set
			{
				this.bookTime = value;
			}

		}

		/// <summary>
		/// 取报告时间
		/// </summary>
		[Obsolete("已经过时，更改为ReportTime", true)]
		public string ReportDate
		{
			get
			{
				return this.reportTime;
			}
			set
			{
				reportTime = value;
			}

		}
		
		#endregion

		#region 方法

		/// <summary>
		/// 克隆
		/// </summary>
		/// <returns></returns>
		public new ItemExtend Clone()
		{
			ItemExtend itemExtend = base.Clone() as ItemExtend;

			itemExtend.Dept = this.Dept.Clone();
			
			return itemExtend;
		}

		#endregion
	}
}


