//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace FS.HISFC.Components.OutpatientFee.TickerServices {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CardTicketServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CardTicketService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryNewCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchangeNewCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchangeOldCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchangeCardOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CardTicketService() {
            this.Url = global::FS.HISFC.Components.OutpatientFee.Properties.Settings.Default.HISFC_Components_OutpatientFee_TickerServices_CardTicketService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryCardCompletedEventHandler QueryCardCompleted;
        
        /// <remarks/>
        public event QueryNewCardCompletedEventHandler QueryNewCardCompleted;
        
        /// <remarks/>
        public event ExchangeNewCardCompletedEventHandler ExchangeNewCardCompleted;
        
        /// <remarks/>
        public event ExchangeOldCardCompletedEventHandler ExchangeOldCardCompleted;
        
        /// <remarks/>
        public event ExchangeCardCompletedEventHandler ExchangeCardCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryCard(string data) {
            object[] results = this.Invoke("QueryCard", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCardAsync(string data) {
            this.QueryCardAsync(data, null);
        }
        
        /// <remarks/>
        public void QueryCardAsync(string data, object userState) {
            if ((this.QueryCardOperationCompleted == null)) {
                this.QueryCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCardOperationCompleted);
            }
            this.InvokeAsync("QueryCard", new object[] {
                        data}, this.QueryCardOperationCompleted, userState);
        }
        
        private void OnQueryCardOperationCompleted(object arg) {
            if ((this.QueryCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCardCompleted(this, new QueryCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryNewCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryNewCard(string cardticketid) {
            object[] results = this.Invoke("QueryNewCard", new object[] {
                        cardticketid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryNewCardAsync(string cardticketid) {
            this.QueryNewCardAsync(cardticketid, null);
        }
        
        /// <remarks/>
        public void QueryNewCardAsync(string cardticketid, object userState) {
            if ((this.QueryNewCardOperationCompleted == null)) {
                this.QueryNewCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryNewCardOperationCompleted);
            }
            this.InvokeAsync("QueryNewCard", new object[] {
                        cardticketid}, this.QueryNewCardOperationCompleted, userState);
        }
        
        private void OnQueryNewCardOperationCompleted(object arg) {
            if ((this.QueryNewCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryNewCardCompleted(this, new QueryNewCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExchangeNewCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExchangeNewCard(string cardticketid, string oper) {
            object[] results = this.Invoke("ExchangeNewCard", new object[] {
                        cardticketid,
                        oper});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExchangeNewCardAsync(string cardticketid, string oper) {
            this.ExchangeNewCardAsync(cardticketid, oper, null);
        }
        
        /// <remarks/>
        public void ExchangeNewCardAsync(string cardticketid, string oper, object userState) {
            if ((this.ExchangeNewCardOperationCompleted == null)) {
                this.ExchangeNewCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchangeNewCardOperationCompleted);
            }
            this.InvokeAsync("ExchangeNewCard", new object[] {
                        cardticketid,
                        oper}, this.ExchangeNewCardOperationCompleted, userState);
        }
        
        private void OnExchangeNewCardOperationCompleted(object arg) {
            if ((this.ExchangeNewCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchangeNewCardCompleted(this, new ExchangeNewCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExchangeOldCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExchangeOldCard(string cardticketid) {
            object[] results = this.Invoke("ExchangeOldCard", new object[] {
                        cardticketid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExchangeOldCardAsync(string cardticketid) {
            this.ExchangeOldCardAsync(cardticketid, null);
        }
        
        /// <remarks/>
        public void ExchangeOldCardAsync(string cardticketid, object userState) {
            if ((this.ExchangeOldCardOperationCompleted == null)) {
                this.ExchangeOldCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchangeOldCardOperationCompleted);
            }
            this.InvokeAsync("ExchangeOldCard", new object[] {
                        cardticketid}, this.ExchangeOldCardOperationCompleted, userState);
        }
        
        private void OnExchangeOldCardOperationCompleted(object arg) {
            if ((this.ExchangeOldCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchangeOldCardCompleted(this, new ExchangeOldCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExchangeCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExchangeCard(string data) {
            object[] results = this.Invoke("ExchangeCard", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExchangeCardAsync(string data) {
            this.ExchangeCardAsync(data, null);
        }
        
        /// <remarks/>
        public void ExchangeCardAsync(string data, object userState) {
            if ((this.ExchangeCardOperationCompleted == null)) {
                this.ExchangeCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchangeCardOperationCompleted);
            }
            this.InvokeAsync("ExchangeCard", new object[] {
                        data}, this.ExchangeCardOperationCompleted, userState);
        }
        
        private void OnExchangeCardOperationCompleted(object arg) {
            if ((this.ExchangeCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchangeCardCompleted(this, new ExchangeCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryCardCompletedEventHandler(object sender, QueryCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryNewCardCompletedEventHandler(object sender, QueryNewCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryNewCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryNewCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExchangeNewCardCompletedEventHandler(object sender, ExchangeNewCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExchangeNewCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExchangeNewCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExchangeOldCardCompletedEventHandler(object sender, ExchangeOldCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExchangeOldCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExchangeOldCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExchangeCardCompletedEventHandler(object sender, ExchangeCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExchangeCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExchangeCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591