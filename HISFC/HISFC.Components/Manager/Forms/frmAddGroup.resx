<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="neuPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>